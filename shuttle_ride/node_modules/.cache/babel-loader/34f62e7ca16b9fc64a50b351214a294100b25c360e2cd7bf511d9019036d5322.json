{"ast":null,"code":"var _jsxFileName = \"/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx\",\n  _s = $RefreshSig$();\n// import \"./HomePage.css\";\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Ensure you have this import\n// import { search_busses } from '../apicalls/user'; // Adjust the import as necessary\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// const HomePage = () => {\n//     const navigate = useNavigate();\n//     const [buses, setBuses] = useState([]);\n//     const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//     const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//     const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//     const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n//     useEffect(() => {\n//         const token = localStorage.getItem('JWT');\n\n//         // Only proceed if token exists\n//         if (token) {\n//             const verifyToken = async () => {\n//                 try {\n//                     const response = await verify_jwt(token); // Call verify_jwt only once\n\n//                     if (response === \"-1\" || response === \"-2\") {\n//                         console.log(\"Invalid token, redirecting to login\");\n//                         navigate(\"/login\");\n//                     }\n//                 } catch (error) {\n//                     console.error(\"Error verifying JWT:\", error);\n//                     navigate(\"/login\");\n//                 }\n//             };\n\n//             verifyToken();\n//         } else {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate]);\n\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n\n//         if (\n//             sourceLatitude === \"\" ||\n//             sourceLongitude === \"\" ||\n//             destinationLatitude === \"\" ||\n//             destinationLongitude === \"\"\n//         ) {\n//             alert(\"Please fill in both source and destination coordinates.\");\n//             return;\n//         }\n\n//         // Additional validation: Check latitude and longitude ranges\n//         if (\n//             sourceLatitude < -1 || sourceLatitude > 20 ||\n//             destinationLatitude < -1 || destinationLatitude > 20 ||\n//             sourceLongitude < -1 || sourceLongitude > 20 ||\n//             destinationLongitude < -1 || destinationLongitude > 20\n//         ) {\n//             alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//             return;\n//         }\n\n//         // Fetch buses here\n//         try {\n//             const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//             console.log(busData); // Check the structure of the bus data\n//             setBuses(busData); // Set the fetched bus data to state\n//         } catch (err) {\n//             console.error('Error fetching buses:', err);\n//         }\n//     };\n\n//     return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n\n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n\n//             </div>\n\n//             <div className=\"bus-list\">\n//     {buses.map((bus) => (\n//         <div\n//             key={bus.busId}\n//             className={`bus-item ${bus.live ? 'live' : 'not-live'}`}\n//             style={{ backgroundColor: bus.color }}\n//                                                       >\n//             <h3>{bus.busName} (ID: {bus.busId})</h3>\n//             <p>Remaining Seats: {bus.totalSeats}</p>\n//             <p>Current Occupancy: {bus.currentOccupancy}</p>\n//             <p className=\"live-status\" style={{ color: bus.live ? 'White' : 'blue' }}>\n//                 {bus.live ? 'Live' : 'Not Live'}\n//             </p>\n//             <button className=\"view-seat-plan-btn\" onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button>\n//             </div>\n//           ))}\n//       </div>\n//         </div>\n//     );\n// };\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { search_busses } from '../apicalls/user';\nimport { verify_jwt } from \"../apicalls/axiosInstance\";\nimport './HomePage.css'; // Ensure you have relevant CSS for the modal and layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [buses, setBuses] = useState([]);\n  const [sourceLatitude, setSourceLatitude] = useState(\"\");\n  const [sourceLongitude, setSourceLongitude] = useState(\"\");\n  const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n  const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n  const [selectedSeatPlan, setSelectedSeatPlan] = useState(null); // For seat plan\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility\n\n  const handleManageBookings = () => {\n    navigate(\"/manage-bookings\");\n  };\n  const viewSeatPlan = seatPlan => {\n    setSelectedSeatPlan(seatPlan); // Set seat plan to state\n    setIsModalOpen(true); // Open modal\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('JWT'); // Clear token on logout\n    navigate(\"/login\");\n  };\n  const handleBooking = () => {\n    alert(`Seats booked: ${selectedSeats.join(', ')}`);\n    // Trigger your booking API here with selectedSeats\n    // Optionally close the modal\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('JWT');\n    if (token) {\n      const verifyToken = async () => {\n        try {\n          const response = await verify_jwt(token);\n          if (response === \"-1\" || response === \"-2\") {\n            navigate(\"/login\");\n          }\n        } catch (error) {\n          console.error(\"Error verifying JWT:\", error);\n          navigate(\"/login\");\n        }\n      };\n      verifyToken();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (sourceLatitude === \"\" || sourceLongitude === \"\" || destinationLatitude === \"\" || destinationLongitude === \"\") {\n      alert(\"Please fill in both source and destination coordinates.\");\n      return;\n    }\n    if (sourceLatitude < -1 || sourceLatitude > 20 || destinationLatitude < -1 || destinationLatitude > 20 || sourceLongitude < -1 || sourceLongitude > 20 || destinationLongitude < -1 || destinationLongitude > 20) {\n      alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n      return;\n    }\n    try {\n      const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n      setBuses(busData);\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManageBookings,\n        className: \"top-btn\",\n        children: \"Manage Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"top-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bus Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"horizontal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Source Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: sourceLatitude,\n            onChange: e => setSourceLatitude(e.target.value),\n            placeholder: \"Source Latitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Source Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: sourceLongitude,\n            onChange: e => setSourceLongitude(e.target.value),\n            placeholder: \"Source Longitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: destinationLatitude,\n            onChange: e => setDestinationLatitude(e.target.value),\n            placeholder: \"Destination Latitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: destinationLongitude,\n            onChange: e => setDestinationLongitude(e.target.value),\n            placeholder: \"Destination Longitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-btn\",\n          children: \"Search Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bus-list\",\n      children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bus-item ${bus.live ? 'live' : 'not-live'}`,\n        style: {\n          backgroundColor: bus.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [bus.busName, \" (ID: \", bus.busId, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Seats: \", bus.totalSeats]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Occupancy: \", bus.currentOccupancy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"live-status\",\n          style: {\n            color: bus.live ? 'white' : 'blue'\n          },\n          children: bus.live ? 'Live' : 'Not Live'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-seat-plan-btn\",\n          onClick: () => viewSeatPlan(bus.seatPlan),\n          children: \"View Seat Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)]\n      }, bus.busId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), isModalOpen && selectedSeatPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seat-plan-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Seat Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seat-grid\",\n          children: Object.keys(selectedSeatPlan).sort((a, b) => {\n            // Extract number and letter from seat (e.g., \"1A\")\n            const [aNumber, aLetter] = [parseInt(a[0]), a[1]];\n            const [bNumber, bLetter] = [parseInt(b[0]), b[1]];\n\n            // Sort by number first, then by letter\n            if (aNumber === bNumber) {\n              return aLetter.localeCompare(bLetter); // Sort alphabetically if numbers are the same\n            }\n            return aNumber - bNumber; // Sort numerically\n          }).map(seatNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `seat-btn ${selectedSeatPlan[seatNumber] ? 'available' : 'booked'}`,\n            disabled: !selectedSeatPlan[seatNumber] // Disable button if seat is booked\n            ,\n            onClick: () => handleSeatSelect(seatNumber),\n            style: {\n              backgroundColor: selectedSeats.includes(seatNumber) ? 'lightblue' : selectedSeatPlan[seatNumber] ? 'lightgreen' : 'lightcoral'\n            },\n            children: seatNumber\n          }, seatNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), selectedSeats.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-btn\",\n          onClick: handleBooking,\n          children: \"Book Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"kf+83xraJoG3VOr2S3ibyqjYsQA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","search_busses","verify_jwt","jsxDEV","_jsxDEV","HomePage","_s","navigate","buses","setBuses","sourceLatitude","setSourceLatitude","sourceLongitude","setSourceLongitude","destinationLatitude","setDestinationLatitude","destinationLongitude","setDestinationLongitude","selectedSeatPlan","setSelectedSeatPlan","isModalOpen","setIsModalOpen","handleManageBookings","viewSeatPlan","seatPlan","handleLogout","localStorage","removeItem","handleBooking","alert","selectedSeats","join","token","getItem","verifyToken","response","error","console","handleSearch","e","preventDefault","busData","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","map","bus","live","style","backgroundColor","color","busName","busId","totalSeats","currentOccupancy","Object","keys","sort","a","b","aNumber","aLetter","parseInt","bNumber","bLetter","localeCompare","seatNumber","disabled","handleSeatSelect","includes","length","_c","$RefreshReg$"],"sources":["/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx"],"sourcesContent":["// import \"./HomePage.css\";\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Ensure you have this import\n// import { search_busses } from '../apicalls/user'; // Adjust the import as necessary\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// const HomePage = () => {\n//     const navigate = useNavigate();\n//     const [buses, setBuses] = useState([]);\n//     const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//     const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//     const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//     const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n//     useEffect(() => {\n//         const token = localStorage.getItem('JWT');\n\n//         // Only proceed if token exists\n//         if (token) {\n//             const verifyToken = async () => {\n//                 try {\n//                     const response = await verify_jwt(token); // Call verify_jwt only once\n\n//                     if (response === \"-1\" || response === \"-2\") {\n//                         console.log(\"Invalid token, redirecting to login\");\n//                         navigate(\"/login\");\n//                     }\n//                 } catch (error) {\n//                     console.error(\"Error verifying JWT:\", error);\n//                     navigate(\"/login\");\n//                 }\n//             };\n\n//             verifyToken();\n//         } else {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate]);\n\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n\n//         if (\n//             sourceLatitude === \"\" ||\n//             sourceLongitude === \"\" ||\n//             destinationLatitude === \"\" ||\n//             destinationLongitude === \"\"\n//         ) {\n//             alert(\"Please fill in both source and destination coordinates.\");\n//             return;\n//         }\n\n//         // Additional validation: Check latitude and longitude ranges\n//         if (\n//             sourceLatitude < -1 || sourceLatitude > 20 ||\n//             destinationLatitude < -1 || destinationLatitude > 20 ||\n//             sourceLongitude < -1 || sourceLongitude > 20 ||\n//             destinationLongitude < -1 || destinationLongitude > 20\n//         ) {\n//             alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//             return;\n//         }\n\n//         // Fetch buses here\n//         try {\n//             const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//             console.log(busData); // Check the structure of the bus data\n//             setBuses(busData); // Set the fetched bus data to state\n//         } catch (err) {\n//             console.error('Error fetching buses:', err);\n//         }\n//     };\n\n//     return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n    \n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n    \n\n//             </div>\n            \n     \n//             <div className=\"bus-list\">\n//     {buses.map((bus) => (\n//         <div\n//             key={bus.busId}\n//             className={`bus-item ${bus.live ? 'live' : 'not-live'}`}\n//             style={{ backgroundColor: bus.color }}\n//                                                       >\n//             <h3>{bus.busName} (ID: {bus.busId})</h3>\n//             <p>Remaining Seats: {bus.totalSeats}</p>\n//             <p>Current Occupancy: {bus.currentOccupancy}</p>\n//             <p className=\"live-status\" style={{ color: bus.live ? 'White' : 'blue' }}>\n//                 {bus.live ? 'Live' : 'Not Live'}\n//             </p>\n//             <button className=\"view-seat-plan-btn\" onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button>\n//             </div>\n//           ))}\n//       </div>\n//         </div>\n//     );\n// };\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { search_busses } from '../apicalls/user';\nimport { verify_jwt } from \"../apicalls/axiosInstance\";\nimport './HomePage.css'; // Ensure you have relevant CSS for the modal and layout\n\nconst HomePage = () => {\n    const navigate = useNavigate();\n    const [buses, setBuses] = useState([]);\n    const [sourceLatitude, setSourceLatitude] = useState(\"\");\n    const [sourceLongitude, setSourceLongitude] = useState(\"\");\n    const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n    const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n    const [selectedSeatPlan, setSelectedSeatPlan] = useState(null); // For seat plan\n    const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility\n\n    const handleManageBookings = () => {\n        navigate(\"/manage-bookings\");\n    };\n\n    const viewSeatPlan = (seatPlan) => {\n        setSelectedSeatPlan(seatPlan); // Set seat plan to state\n        setIsModalOpen(true); // Open modal\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('JWT');  // Clear token on logout\n        navigate(\"/login\");\n    };\n  \n    const handleBooking = () => {\n      alert(`Seats booked: ${selectedSeats.join(', ')}`);\n      // Trigger your booking API here with selectedSeats\n      // Optionally close the modal\n      setIsModalOpen(false);\n  };\n\n    useEffect(() => {\n        const token = localStorage.getItem('JWT');\n        if (token) {\n            const verifyToken = async () => {\n                try {\n                    const response = await verify_jwt(token);\n                    if (response === \"-1\" || response === \"-2\") {\n                        navigate(\"/login\");\n                    }\n                } catch (error) {\n                    console.error(\"Error verifying JWT:\", error);\n                    navigate(\"/login\");\n                }\n            };\n            verifyToken();\n        } else {\n            navigate(\"/login\");\n        }\n    }, [navigate]);\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        if (sourceLatitude === \"\" || sourceLongitude === \"\" || destinationLatitude === \"\" || destinationLongitude === \"\") {\n            alert(\"Please fill in both source and destination coordinates.\");\n            return;\n        }\n        if (sourceLatitude < -1 || sourceLatitude > 20 || destinationLatitude < -1 || destinationLatitude > 20 ||\n            sourceLongitude < -1 || sourceLongitude > 20 || destinationLongitude < -1 || destinationLongitude > 20) {\n            alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n            return;\n        }\n\n        try {\n            const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n            setBuses(busData);\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n        }\n    };\n\n    return (\n        <div className=\"homepage-container\">\n            <div className=\"top-buttons\">\n                <button onClick={handleManageBookings} className=\"top-btn\">Manage Bookings</button>\n                <button onClick={handleLogout} className=\"top-btn\">Logout</button>\n            </div>\n\n            <div className=\"search-container\">\n                <h1>Bus Search</h1>\n                <form onSubmit={handleSearch} className=\"horizontal-form\">\n                    <div className=\"coordinate-input\">\n                        <label>Source Latitude</label>\n                        <input\n                            type=\"number\"\n                            value={sourceLatitude}\n                            onChange={(e) => setSourceLatitude(e.target.value)}\n                            placeholder=\"Source Latitude\"\n                            required\n                        />\n                    </div>\n                    <div className=\"coordinate-input\">\n                        <label>Source Longitude</label>\n                        <input\n                            type=\"number\"\n                            value={sourceLongitude}\n                            onChange={(e) => setSourceLongitude(e.target.value)}\n                            placeholder=\"Source Longitude\"\n                            required\n                        />\n                    </div>\n                    <div className=\"coordinate-input\">\n                        <label>Destination Latitude</label>\n                        <input\n                            type=\"number\"\n                            value={destinationLatitude}\n                            onChange={(e) => setDestinationLatitude(e.target.value)}\n                            placeholder=\"Destination Latitude\"\n                            required\n                        />\n                    </div>\n                    <div className=\"coordinate-input\">\n                        <label>Destination Longitude</label>\n                        <input\n                            type=\"number\"\n                            value={destinationLongitude}\n                            onChange={(e) => setDestinationLongitude(e.target.value)}\n                            placeholder=\"Destination Longitude\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"search-btn\">Search Buses</button>\n                </form>\n            </div>\n\n            <div className=\"bus-list\">\n                {buses.map((bus) => (\n                    <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.color }}>\n                        <h3>{bus.busName} (ID: {bus.busId})</h3>\n                        <p>Total Seats: {bus.totalSeats}</p>\n                        <p>Current Occupancy: {bus.currentOccupancy}</p>\n                        <p className=\"live-status\" style={{ color: bus.live ? 'white' : 'blue' }}>{bus.live ? 'Live' : 'Not Live'}</p>\n                        <button className=\"view-seat-plan-btn\" onClick={() => viewSeatPlan(bus.seatPlan)}>View Seat Plan</button>\n                    </div>\n                ))}\n            </div>\n{/* \n            {isModalOpen && selectedSeatPlan && (\n    <div className=\"seat-plan-modal\">\n        <div className=\"modal-content\">\n            <h2>Seat Plan</h2>\n            <div className=\"seat-grid\">\n                {Object.keys(selectedSeatPlan)\n                    .sort((a, b) => {\n                        // Extract number and letter from seat (e.g., \"1A\")\n                        const [aNumber, aLetter] = [parseInt(a[0]), a[1]];\n                        const [bNumber, bLetter] = [parseInt(b[0]), b[1]];\n                        \n                        // Sort by number first, then by letter\n                        if (aNumber === bNumber) {\n                            return aLetter.localeCompare(bLetter); // Sort alphabetically if numbers are the same\n                        }\n                        return aNumber - bNumber; // Sort numerically\n                    })\n                    .map((seatNumber) => (\n                        <div\n                            key={seatNumber}\n                            className=\"seat\"\n                            style={{\n                                backgroundColor: selectedSeatPlan[seatNumber] ? 'lightgreen' : 'lightcoral',\n                            }}\n                        >\n                            {seatNumber}: {selectedSeatPlan[seatNumber] ? 'Available' : 'Booked'}\n                        </div>\n                    ))}\n            </div>\n            <button className=\"close-btn\" onClick={() => setIsModalOpen(false)}>Close</button>\n        </div>\n    </div>\n)} */}\n          {isModalOpen && selectedSeatPlan && (\n                <div className=\"seat-plan-modal\">\n                    <div className=\"modal-content\">\n                        <h2>Seat Plan</h2>\n                        <div className=\"seat-grid\">\n                            {Object.keys(selectedSeatPlan)\n                                .sort((a, b) => {\n                                    // Extract number and letter from seat (e.g., \"1A\")\n                                    const [aNumber, aLetter] = [parseInt(a[0]), a[1]];\n                                    const [bNumber, bLetter] = [parseInt(b[0]), b[1]];\n\n                                    // Sort by number first, then by letter\n                                    if (aNumber === bNumber) {\n                                        return aLetter.localeCompare(bLetter); // Sort alphabetically if numbers are the same\n                                    }\n                                    return aNumber - bNumber; // Sort numerically\n                                })\n                                .map((seatNumber) => (\n                                    <button\n                                        key={seatNumber}\n                                        className={`seat-btn ${selectedSeatPlan[seatNumber] ? 'available' : 'booked'}`}\n                                        disabled={!selectedSeatPlan[seatNumber]} // Disable button if seat is booked\n                                        onClick={() => handleSeatSelect(seatNumber)}\n                                        style={{\n                                            backgroundColor: selectedSeats.includes(seatNumber) ? 'lightblue' : (selectedSeatPlan[seatNumber] ? 'lightgreen' : 'lightcoral'),\n                                        }}\n                                    >\n                                        {seatNumber}\n                                    </button>\n                                ))}\n                        </div>\n\n                        {/* Display Book button if at least one seat is selected */}\n                        {selectedSeats.length > 0 && (\n                            <button className=\"book-btn\" onClick={handleBooking}>Book Seats</button>\n                        )}\n                        <button className=\"close-btn\" onClick={() => setIsModalOpen(false)}>Close</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,eAAe,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}