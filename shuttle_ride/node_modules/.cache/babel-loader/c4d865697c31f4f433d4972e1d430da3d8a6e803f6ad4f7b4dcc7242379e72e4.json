{"ast":null,"code":"export const loginUser = async (mobileNumber, Role) => {\n  try {\n    const response = await fetch('http://localhost:5001/auth/send_otp', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mobileNumber: mobileNumber,\n        role: Role\n      })\n    });\n    if (response.ok) {\n      const data = await response.text();\n      console.log(data);\n      return data === \"pending\" ? \"pending\" : data;\n    } else {\n      console.log(`Request failed with status: ${response.status}`);\n      return \"error\";\n    }\n  } catch (error) {\n    console.error(\"Error:\", error);\n    throw error;\n  }\n};\nexport const Login_OTP = async (mobileNumber, otp) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/auth/verify_otp\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        mobileNumber: mobileNumber,\n        otp: otp\n      })\n    });\n    if (response.ok) {\n      const data = await response.text();\n      if (data === \"-1\") {\n        return false;\n      } else {\n        localStorage.setItem(\"JWT\", data);\n        return true;\n      }\n    } else {\n      console.log(\"Request failed with status:\", response.status);\n      return \"error\";\n    }\n  } catch (error) {\n    console.error(\"Error:\", error);\n    throw error;\n  }\n};\n_c = Login_OTP;\nexport const getUserBookings = async () => {\n  const token = localStorage.getItem('JWT');\n  const response = await fetch(\"http://localhost:5001/users/bookings\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      jwt: token\n    })\n  });\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} - ${response.statusText}`);\n  }\n  const data = await response.json();\n  return data;\n};\nexport const book_seat = async (busId, seat, s1, s2, d1, d2) => {\n  const token = localStorage.getItem('JWT');\n  const response = await fetch(\"http://localhost:5001/users/seat-booking\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      BusId: busId,\n      seat: seat,\n      s1: s1,\n      s2: s2,\n      d1: d1,\n      d2: d2,\n      jwt: token\n    })\n  }).then(response => response.text()).then(data => {\n    return data;\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n};\nexport const cancelBooking = async bookingId => {\n  const token = localStorage.getItem('JWT');\n  console.log(bookingId);\n  const response = await fetch(\"http://localhost:5001/users/cancel-booking\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      BookingID: bookingId,\n      jwt: token\n    })\n  });\n  return response;\n};\nexport const search_busses = async (s1, s2, d1, d2) => {\n  const token = localStorage.getItem('JWT');\n  const response = await fetch(\"http://localhost:5001/users/search\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      s1: s1,\n      s2: s2,\n      d1: d1,\n      d2: d2\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const verify_jwt = async token => {\n  await fetch(\"http://localhost:5001\" + '/auth/jwt', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify({\n      jwt: token\n    })\n  }).then(response => {\n    console.log(response);\n    response.text();\n    return response;\n  }).catch(error => {\n    console.log(error);\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Login_OTP\");","map":{"version":3,"names":["loginUser","mobileNumber","Role","response","fetch","method","headers","body","JSON","stringify","role","ok","data","text","console","log","status","error","Login_OTP","otp","localStorage","setItem","_c","getUserBookings","token","getItem","jwt","Error","statusText","json","book_seat","busId","seat","s1","s2","d1","d2","BusId","then","catch","cancelBooking","bookingId","BookingID","search_busses","verify_jwt","$RefreshReg$"],"sources":["/Users/vivek/Desktop/movein/shuttle_ride/src/apicalls/user.js"],"sourcesContent":["\nexport const loginUser = async (mobileNumber, Role) => {\n    try {\n        const response = await fetch('http://localhost:5001/auth/send_otp', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                mobileNumber: mobileNumber, \n                role: Role                   \n            })\n        });\n\n        if (response.ok) {\n            const data = await response.text();\n            console.log(data);\n            return data === \"pending\" ? \"pending\" : data;\n        } else {\n            console.log(`Request failed with status: ${response.status}`);\n            return \"error\";\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error;\n    }\n};\n\nexport const Login_OTP = async (mobileNumber, otp) => {\n    try {\n        const response = await fetch(\"http://localhost:5001/auth/verify_otp\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify({\n                mobileNumber: mobileNumber, \n                otp: otp                   \n            })\n        });\n        if (response.ok) {\n            const data = await response.text();\n            if (data === \"-1\") {\n                return false;\n            } else {\n                localStorage.setItem(\"JWT\", data);\n                return true;\n            }\n        }else {\n            console.log(\"Request failed with status:\", response.status);\n            return \"error\";\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error;\n    }\n\n}\nexport const getUserBookings = async () => {\n    const token = localStorage.getItem('JWT');\n    const response = await fetch(\"http://localhost:5001/users/bookings\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            jwt: token\n        })\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error: ${response.status} - ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data; \n};\nexport const book_seat = async (busId,seat,s1,s2,d1,d2) => {\n    const token = localStorage.getItem('JWT');\n    const response = await fetch(\"http://localhost:5001/users/seat-booking\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            BusId: busId,\n            seat: seat,\n            s1: s1,\n            s2: s2,\n            d1: d1,\n            d2: d2,\n            jwt: token\n        })\n    }).then(response => response.text()) \n    .then(data => {\n        return data;\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n};\nexport const cancelBooking = async (bookingId) => {\n    const token = localStorage.getItem('JWT');\n    console.log(bookingId);\n    const response = await fetch(\"http://localhost:5001/users/cancel-booking\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            BookingID:bookingId,\n            jwt:token\n           })\n    });\n    return response;\n};\nexport const search_busses = async (s1, s2, d1, d2) => {\n    const token = localStorage.getItem('JWT');\n    const response = await fetch(\"http://localhost:5001/users/search\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`, \n        },\n        body: JSON.stringify({\n            s1: s1,\n            s2: s2,\n            d1: d1,\n            d2: d2\n        })\n    });\n\n    const data = await response.json();\n    console.log(data);\n    return data; \n};\n\n    \nexport const verify_jwt = async (token) => {\n\n    await fetch(\"http://localhost:5001\" + '/auth/jwt', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n         jwt:token\n        })\n    })\n        .then(response => {\n            console.log(response)\n            response.text()\n            return response;\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    \n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}