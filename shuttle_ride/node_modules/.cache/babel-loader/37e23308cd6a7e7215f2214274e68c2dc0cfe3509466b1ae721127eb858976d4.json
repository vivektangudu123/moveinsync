{"ast":null,"code":"var _jsxFileName = \"/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./HomePage.css\";\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// import { search_busses } from \"../apicalls/user\";\n// function HomePage() {\n//   const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//   const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//   const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//   const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const [buses, setBuses] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('JWT');\n\n//     // Only proceed if token exists\n//     if (token) {\n//       const verifyToken = async () => {\n//         try {\n//           const response = await verify_jwt(token); // Call verify_jwt only once\n\n//           if (response === \"-1\" || response === \"-2\") {\n//             console.log(\"Invalid token, redirecting to login\");\n//             navigate(\"/login\");\n//           }\n//         } catch (error) {\n//           console.error(\"Error verifying JWT:\", error);\n//           navigate(\"/login\"); \n//         }\n//       };\n\n//       verifyToken(); \n//     } else {\n\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);  \n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       sourceLatitude === \"\" ||\n//       sourceLongitude === \"\" ||\n//       destinationLatitude === \"\" ||\n//       destinationLongitude === \"\"\n//     ) {\n//       alert(\"Please fill in both source and destination coordinates.\");\n//       return;\n//     }\n\n//     // Additional validation: Check latitude and longitude ranges\n//     if (\n//       sourceLatitude < -1 || sourceLatitude > 20 ||\n//       destinationLatitude < -1 || destinationLatitude > 20 ||\n//       sourceLongitude < -1 || sourceLongitude > 20 ||\n//       destinationLongitude < -1 || destinationLongitude > 20\n//     ) {\n//       alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//       return;\n//     }\n\n//     useEffect(() => {\n//       const fetchBuses = async () => {\n//           try {\n//               const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//               console.log(busData); // Check the structure of the bus data\n//               setBuses(busData); // Set the fetched bus data to state\n//           } catch (err) {\n//               console.error('Error fetching buses:', err);\n//           } finally {\n//           }\n//       };\n\n//       fetchBuses();\n//   }, [sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude]);\n//   };\n\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n\n//   return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n\n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n\n//           <div className=\"bus-list\">\n//                 {buses.map((bus) => (\n//                     <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.live ? 'lightgreen' : 'lightcoral' }}>\n//                         <h3>{bus.busName} (ID: {bus.busId})</h3>\n//                         <p>Total Seats: {bus.totalSeats}</p>\n//                         <p>Current Occupancy: {bus.currentOccupancy}</p>\n//                         {/* <button onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button> */}\n//                         {/* <div className=\"seat-plan\">\n//                             {bus.seatPlan.map(seat => (\n//                                 <div key={seat.seatNumber} style={{ backgroundColor: seat.isAvailable ? 'lightgreen' : 'lightcoral' }}>\n//                                     {seat.seatNumber}: {seat.isAvailable ? 'Available' : 'Booked'}\n//                                 </div>\n//                             ))}\n//                         </div> */}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//       </div>\n//     );    \n// }\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you have this import\nimport { search_busses } from './path/to/your/api'; // Adjust the import as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [buses, setBuses] = useState([]);\n  const [sourceLatitude, setSourceLatitude] = useState(\"\");\n  const [sourceLongitude, setSourceLongitude] = useState(\"\");\n  const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n  const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem('JWT');\n\n    // Only proceed if token exists\n    if (token) {\n      const verifyToken = async () => {\n        try {\n          const response = await verify_jwt(token); // Call verify_jwt only once\n\n          if (response === \"-1\" || response === \"-2\") {\n            console.log(\"Invalid token, redirecting to login\");\n            navigate(\"/login\");\n          }\n        } catch (error) {\n          console.error(\"Error verifying JWT:\", error);\n          navigate(\"/login\");\n        }\n      };\n      verifyToken();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (sourceLatitude === \"\" || sourceLongitude === \"\" || destinationLatitude === \"\" || destinationLongitude === \"\") {\n      alert(\"Please fill in both source and destination coordinates.\");\n      return;\n    }\n\n    // Additional validation: Check latitude and longitude ranges\n    if (sourceLatitude < -1 || sourceLatitude > 20 || destinationLatitude < -1 || destinationLatitude > 20 || sourceLongitude < -1 || sourceLongitude > 20 || destinationLongitude < -1 || destinationLongitude > 20) {\n      alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n      return;\n    }\n\n    // Fetch buses here\n    try {\n      const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n      console.log(busData); // Check the structure of the bus data\n      setBuses(busData); // Set the fetched bus data to state\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Source Latitude\",\n        value: sourceLatitude,\n        onChange: e => setSourceLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Source Longitude\",\n        value: sourceLongitude,\n        onChange: e => setSourceLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Destination Latitude\",\n        value: destinationLatitude,\n        onChange: e => setDestinationLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Destination Longitude\",\n        value: destinationLongitude,\n        onChange: e => setDestinationLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search Buses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: bus.busName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Seats: \", bus.totalSeats]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Occupancy: \", bus.currentOccupancy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, bus.busId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"VavS2tdBRzQ3+bCz52nRTbzSniQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","search_busses","jsxDEV","_jsxDEV","HomePage","_s","navigate","buses","setBuses","sourceLatitude","setSourceLatitude","sourceLongitude","setSourceLongitude","destinationLatitude","setDestinationLatitude","destinationLongitude","setDestinationLongitude","token","localStorage","getItem","verifyToken","response","verify_jwt","console","log","error","handleSearch","e","preventDefault","alert","busData","err","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","bus","busName","totalSeats","currentOccupancy","busId","_c","$RefreshReg$"],"sources":["/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./HomePage.css\";\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// import { search_busses } from \"../apicalls/user\";\n// function HomePage() {\n//   const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//   const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//   const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//   const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const [buses, setBuses] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('JWT');\n\n//     // Only proceed if token exists\n//     if (token) {\n//       const verifyToken = async () => {\n//         try {\n//           const response = await verify_jwt(token); // Call verify_jwt only once\n        \n//           if (response === \"-1\" || response === \"-2\") {\n//             console.log(\"Invalid token, redirecting to login\");\n//             navigate(\"/login\");\n//           }\n//         } catch (error) {\n//           console.error(\"Error verifying JWT:\", error);\n//           navigate(\"/login\"); \n//         }\n//       };\n\n//       verifyToken(); \n//     } else {\n      \n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);  \n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       sourceLatitude === \"\" ||\n//       sourceLongitude === \"\" ||\n//       destinationLatitude === \"\" ||\n//       destinationLongitude === \"\"\n//     ) {\n//       alert(\"Please fill in both source and destination coordinates.\");\n//       return;\n//     }\n\n//     // Additional validation: Check latitude and longitude ranges\n//     if (\n//       sourceLatitude < -1 || sourceLatitude > 20 ||\n//       destinationLatitude < -1 || destinationLatitude > 20 ||\n//       sourceLongitude < -1 || sourceLongitude > 20 ||\n//       destinationLongitude < -1 || destinationLongitude > 20\n//     ) {\n//       alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//       return;\n//     }\n\n//     useEffect(() => {\n//       const fetchBuses = async () => {\n//           try {\n//               const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//               console.log(busData); // Check the structure of the bus data\n//               setBuses(busData); // Set the fetched bus data to state\n//           } catch (err) {\n//               console.error('Error fetching buses:', err);\n//           } finally {\n//           }\n//       };\n\n//       fetchBuses();\n//   }, [sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude]);\n//   };\n\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n\n//   return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n    \n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n    \n//           <div className=\"bus-list\">\n//                 {buses.map((bus) => (\n//                     <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.live ? 'lightgreen' : 'lightcoral' }}>\n//                         <h3>{bus.busName} (ID: {bus.busId})</h3>\n//                         <p>Total Seats: {bus.totalSeats}</p>\n//                         <p>Current Occupancy: {bus.currentOccupancy}</p>\n//                         {/* <button onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button> */}\n//                         {/* <div className=\"seat-plan\">\n//                             {bus.seatPlan.map(seat => (\n//                                 <div key={seat.seatNumber} style={{ backgroundColor: seat.isAvailable ? 'lightgreen' : 'lightcoral' }}>\n//                                     {seat.seatNumber}: {seat.isAvailable ? 'Available' : 'Booked'}\n//                                 </div>\n//                             ))}\n//                         </div> */}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//       </div>\n//     );    \n// }\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you have this import\nimport { search_busses } from './path/to/your/api'; // Adjust the import as necessary\n\nconst HomePage = () => {\n    const navigate = useNavigate();\n    const [buses, setBuses] = useState([]);\n    const [sourceLatitude, setSourceLatitude] = useState(\"\");\n    const [sourceLongitude, setSourceLongitude] = useState(\"\");\n    const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n    const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n\n    useEffect(() => {\n        const token = localStorage.getItem('JWT');\n\n        // Only proceed if token exists\n        if (token) {\n            const verifyToken = async () => {\n                try {\n                    const response = await verify_jwt(token); // Call verify_jwt only once\n\n                    if (response === \"-1\" || response === \"-2\") {\n                        console.log(\"Invalid token, redirecting to login\");\n                        navigate(\"/login\");\n                    }\n                } catch (error) {\n                    console.error(\"Error verifying JWT:\", error);\n                    navigate(\"/login\");\n                }\n            };\n\n            verifyToken();\n        } else {\n            navigate(\"/login\");\n        }\n    }, [navigate]);\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        if (\n            sourceLatitude === \"\" ||\n            sourceLongitude === \"\" ||\n            destinationLatitude === \"\" ||\n            destinationLongitude === \"\"\n        ) {\n            alert(\"Please fill in both source and destination coordinates.\");\n            return;\n        }\n\n        // Additional validation: Check latitude and longitude ranges\n        if (\n            sourceLatitude < -1 || sourceLatitude > 20 ||\n            destinationLatitude < -1 || destinationLatitude > 20 ||\n            sourceLongitude < -1 || sourceLongitude > 20 ||\n            destinationLongitude < -1 || destinationLongitude > 20\n        ) {\n            alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n            return;\n        }\n\n        // Fetch buses here\n        try {\n            const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n            console.log(busData); // Check the structure of the bus data\n            setBuses(busData); // Set the fetched bus data to state\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSearch}>\n                {/* Input fields for source and destination coordinates */}\n                <input type=\"text\" placeholder=\"Source Latitude\" value={sourceLatitude} onChange={(e) => setSourceLatitude(e.target.value)} />\n                <input type=\"text\" placeholder=\"Source Longitude\" value={sourceLongitude} onChange={(e) => setSourceLongitude(e.target.value)} />\n                <input type=\"text\" placeholder=\"Destination Latitude\" value={destinationLatitude} onChange={(e) => setDestinationLatitude(e.target.value)} />\n                <input type=\"text\" placeholder=\"Destination Longitude\" value={destinationLongitude} onChange={(e) => setDestinationLongitude(e.target.value)} />\n                <button type=\"submit\">Search Buses</button>\n            </form>\n            {/* Render the buses here */}\n            <div>\n                {buses.map(bus => (\n                    <div key={bus.busId}>\n                        <h2>{bus.busName}</h2>\n                        <p>Total Seats: {bus.totalSeats}</p>\n                        <p>Current Occupancy: {bus.currentOccupancy}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,aAAa,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,eAAe,EAAEC,kBAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}