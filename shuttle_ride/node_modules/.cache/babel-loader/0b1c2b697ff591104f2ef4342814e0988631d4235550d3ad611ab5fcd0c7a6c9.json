{"ast":null,"code":"var _jsxFileName = \"/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./HomePage.css\";\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// import { search_busses } from \"../apicalls/user\";\n// function HomePage() {\n//   const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//   const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//   const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//   const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const [buses, setBuses] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('JWT');\n\n//     // Only proceed if token exists\n//     if (token) {\n//       const verifyToken = async () => {\n//         try {\n//           const response = await verify_jwt(token); // Call verify_jwt only once\n\n//           if (response === \"-1\" || response === \"-2\") {\n//             console.log(\"Invalid token, redirecting to login\");\n//             navigate(\"/login\");\n//           }\n//         } catch (error) {\n//           console.error(\"Error verifying JWT:\", error);\n//           navigate(\"/login\"); \n//         }\n//       };\n\n//       verifyToken(); \n//     } else {\n\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);  \n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       sourceLatitude === \"\" ||\n//       sourceLongitude === \"\" ||\n//       destinationLatitude === \"\" ||\n//       destinationLongitude === \"\"\n//     ) {\n//       alert(\"Please fill in both source and destination coordinates.\");\n//       return;\n//     }\n\n//     // Additional validation: Check latitude and longitude ranges\n//     if (\n//       sourceLatitude < -1 || sourceLatitude > 20 ||\n//       destinationLatitude < -1 || destinationLatitude > 20 ||\n//       sourceLongitude < -1 || sourceLongitude > 20 ||\n//       destinationLongitude < -1 || destinationLongitude > 20\n//     ) {\n//       alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//       return;\n//     }\n\n//     useEffect(() => {\n//       const fetchBuses = async () => {\n//           try {\n//               const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//               console.log(busData); // Check the structure of the bus data\n//               setBuses(busData); // Set the fetched bus data to state\n//           } catch (err) {\n//               console.error('Error fetching buses:', err);\n//           } finally {\n//           }\n//       };\n\n//       fetchBuses();\n//   }, [sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude]);\n//   };\n\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n\n//   return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n\n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n\n//           <div className=\"bus-list\">\n//                 {buses.map((bus) => (\n//                     <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.live ? 'lightgreen' : 'lightcoral' }}>\n//                         <h3>{bus.busName} (ID: {bus.busId})</h3>\n//                         <p>Total Seats: {bus.totalSeats}</p>\n//                         <p>Current Occupancy: {bus.currentOccupancy}</p>\n//                         {/* <button onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button> */}\n//                         {/* <div className=\"seat-plan\">\n//                             {bus.seatPlan.map(seat => (\n//                                 <div key={seat.seatNumber} style={{ backgroundColor: seat.isAvailable ? 'lightgreen' : 'lightcoral' }}>\n//                                     {seat.seatNumber}: {seat.isAvailable ? 'Available' : 'Booked'}\n//                                 </div>\n//                             ))}\n//                         </div> */}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//       </div>\n//     );    \n// }\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you have this import\nimport { search_busses } from '../apicalls/user'; // Adjust the import as necessary\nimport { verify_jwt } from \"../apicalls/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [buses, setBuses] = useState([]);\n  const [sourceLatitude, setSourceLatitude] = useState(\"\");\n  const [sourceLongitude, setSourceLongitude] = useState(\"\");\n  const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n  const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem('JWT');\n\n    // Only proceed if token exists\n    if (token) {\n      const verifyToken = async () => {\n        try {\n          const response = await verify_jwt(token); // Call verify_jwt only once\n\n          if (response === \"-1\" || response === \"-2\") {\n            console.log(\"Invalid token, redirecting to login\");\n            navigate(\"/login\");\n          }\n        } catch (error) {\n          console.error(\"Error verifying JWT:\", error);\n          navigate(\"/login\");\n        }\n      };\n      verifyToken();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (sourceLatitude === \"\" || sourceLongitude === \"\" || destinationLatitude === \"\" || destinationLongitude === \"\") {\n      alert(\"Please fill in both source and destination coordinates.\");\n      return;\n    }\n\n    // Additional validation: Check latitude and longitude ranges\n    if (sourceLatitude < -1 || sourceLatitude > 20 || destinationLatitude < -1 || destinationLatitude > 20 || sourceLongitude < -1 || sourceLongitude > 20 || destinationLongitude < -1 || destinationLongitude > 20) {\n      alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n      return;\n    }\n\n    // Fetch buses here\n    try {\n      const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n      console.log(busData); // Check the structure of the bus data\n      setBuses(busData); // Set the fetched bus data to state\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManageBookings,\n        className: \"top-btn\",\n        children: \"Manage Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"top-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bus Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"horizontal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Source Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: sourceLatitude,\n            onChange: e => setSourceLatitude(e.target.value),\n            placeholder: \"Source Latitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Source Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: sourceLongitude,\n            onChange: e => setSourceLongitude(e.target.value),\n            placeholder: \"Source Longitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: destinationLatitude,\n            onChange: e => setDestinationLatitude(e.target.value),\n            placeholder: \"Destination Latitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coordinate-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: destinationLongitude,\n            onChange: e => setDestinationLongitude(e.target.value),\n            placeholder: \"Destination Longitude\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-btn\",\n          children: \"Search Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-list\",\n        children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bus-item ${bus.live ? 'live' : 'not-live'}`,\n          style: {\n            backgroundColor: bus.live ? 'lightgreen' : 'lightcoral'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [bus.busName, \" (ID: \", bus.busId, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Seats: \", bus.totalSeats]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Occupancy: \", bus.currentOccupancy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, bus.busId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 7\n  }, this);\n};\n_s(HomePage, \"VavS2tdBRzQ3+bCz52nRTbzSniQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","search_busses","verify_jwt","jsxDEV","_jsxDEV","HomePage","_s","navigate","buses","setBuses","sourceLatitude","setSourceLatitude","sourceLongitude","setSourceLongitude","destinationLatitude","setDestinationLatitude","destinationLongitude","setDestinationLongitude","token","localStorage","getItem","verifyToken","response","console","log","error","handleSearch","e","preventDefault","alert","busData","err","className","children","onClick","handleManageBookings","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","onSubmit","type","value","onChange","target","placeholder","required","map","bus","live","style","backgroundColor","busName","busId","totalSeats","currentOccupancy","_c","$RefreshReg$"],"sources":["/Users/vivek/Desktop/movein/shuttle_ride/src/pages/home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./HomePage.css\";\n// import { verify_jwt } from \"../apicalls/axiosInstance\";\n// import { search_busses } from \"../apicalls/user\";\n// function HomePage() {\n//   const [sourceLatitude, setSourceLatitude] = useState(\"\");\n//   const [sourceLongitude, setSourceLongitude] = useState(\"\");\n//   const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n//   const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n//   const [buses, setBuses] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('JWT');\n\n//     // Only proceed if token exists\n//     if (token) {\n//       const verifyToken = async () => {\n//         try {\n//           const response = await verify_jwt(token); // Call verify_jwt only once\n        \n//           if (response === \"-1\" || response === \"-2\") {\n//             console.log(\"Invalid token, redirecting to login\");\n//             navigate(\"/login\");\n//           }\n//         } catch (error) {\n//           console.error(\"Error verifying JWT:\", error);\n//           navigate(\"/login\"); \n//         }\n//       };\n\n//       verifyToken(); \n//     } else {\n      \n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);  \n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       sourceLatitude === \"\" ||\n//       sourceLongitude === \"\" ||\n//       destinationLatitude === \"\" ||\n//       destinationLongitude === \"\"\n//     ) {\n//       alert(\"Please fill in both source and destination coordinates.\");\n//       return;\n//     }\n\n//     // Additional validation: Check latitude and longitude ranges\n//     if (\n//       sourceLatitude < -1 || sourceLatitude > 20 ||\n//       destinationLatitude < -1 || destinationLatitude > 20 ||\n//       sourceLongitude < -1 || sourceLongitude > 20 ||\n//       destinationLongitude < -1 || destinationLongitude > 20\n//     ) {\n//       alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n//       return;\n//     }\n\n//     useEffect(() => {\n//       const fetchBuses = async () => {\n//           try {\n//               const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n//               console.log(busData); // Check the structure of the bus data\n//               setBuses(busData); // Set the fetched bus data to state\n//           } catch (err) {\n//               console.error('Error fetching buses:', err);\n//           } finally {\n//           }\n//       };\n\n//       fetchBuses();\n//   }, [sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude]);\n//   };\n\n//   const handleManageBookings = () => {\n//     navigate(\"/manage-bookings\");\n//   };\n//   const viewSeatPlan = (busId) => {\n//     navigate(`/seat-plan/${busId}`); // Assuming you have a route for seat plan details\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('JWT');  // Clear token on logout\n//     navigate(\"/login\");\n//   };\n\n//   return (\n\n//       <div className=\"homepage-container\">\n//         <div className=\"top-buttons\">\n//           <button onClick={handleManageBookings} className=\"top-btn\">\n//             Manage Bookings\n//           </button>\n//           <button onClick={handleLogout} className=\"top-btn\">\n//             Logout\n//           </button>\n//         </div>\n    \n//         <div className=\"search-container\">\n//           <h1>Bus Search</h1>\n//           <form onSubmit={handleSearch} className=\"horizontal-form\">\n//             <div className=\"coordinate-input\">\n//               <label>Source Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLatitude}\n//                 onChange={(e) => setSourceLatitude(e.target.value)}\n//                 placeholder=\"Source Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Source Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={sourceLongitude}\n//                 onChange={(e) => setSourceLongitude(e.target.value)}\n//                 placeholder=\"Source Longitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Latitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLatitude}\n//                 onChange={(e) => setDestinationLatitude(e.target.value)}\n//                 placeholder=\"Destination Latitude\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"coordinate-input\">\n//               <label>Destination Longitude</label>\n//               <input\n//                 type=\"number\"\n//                 value={destinationLongitude}\n//                 onChange={(e) => setDestinationLongitude(e.target.value)}\n//                 placeholder=\"Destination Longitude\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"search-btn\">\n//               Search Buses\n//             </button>\n//           </form>\n    \n//           <div className=\"bus-list\">\n//                 {buses.map((bus) => (\n//                     <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.live ? 'lightgreen' : 'lightcoral' }}>\n//                         <h3>{bus.busName} (ID: {bus.busId})</h3>\n//                         <p>Total Seats: {bus.totalSeats}</p>\n//                         <p>Current Occupancy: {bus.currentOccupancy}</p>\n//                         {/* <button onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button> */}\n//                         {/* <div className=\"seat-plan\">\n//                             {bus.seatPlan.map(seat => (\n//                                 <div key={seat.seatNumber} style={{ backgroundColor: seat.isAvailable ? 'lightgreen' : 'lightcoral' }}>\n//                                     {seat.seatNumber}: {seat.isAvailable ? 'Available' : 'Booked'}\n//                                 </div>\n//                             ))}\n//                         </div> */}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//       </div>\n//     );    \n// }\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you have this import\nimport { search_busses } from '../apicalls/user'; // Adjust the import as necessary\nimport { verify_jwt } from \"../apicalls/axiosInstance\";\nconst HomePage = () => {\n    const navigate = useNavigate();\n    const [buses, setBuses] = useState([]);\n    const [sourceLatitude, setSourceLatitude] = useState(\"\");\n    const [sourceLongitude, setSourceLongitude] = useState(\"\");\n    const [destinationLatitude, setDestinationLatitude] = useState(\"\");\n    const [destinationLongitude, setDestinationLongitude] = useState(\"\");\n\n    useEffect(() => {\n        const token = localStorage.getItem('JWT');\n\n        // Only proceed if token exists\n        if (token) {\n            const verifyToken = async () => {\n                try {\n                    const response = await verify_jwt(token); // Call verify_jwt only once\n\n                    if (response === \"-1\" || response === \"-2\") {\n                        console.log(\"Invalid token, redirecting to login\");\n                        navigate(\"/login\");\n                    }\n                } catch (error) {\n                    console.error(\"Error verifying JWT:\", error);\n                    navigate(\"/login\");\n                }\n            };\n\n            verifyToken();\n        } else {\n            navigate(\"/login\");\n        }\n    }, [navigate]);\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        if (\n            sourceLatitude === \"\" ||\n            sourceLongitude === \"\" ||\n            destinationLatitude === \"\" ||\n            destinationLongitude === \"\"\n        ) {\n            alert(\"Please fill in both source and destination coordinates.\");\n            return;\n        }\n\n        // Additional validation: Check latitude and longitude ranges\n        if (\n            sourceLatitude < -1 || sourceLatitude > 20 ||\n            destinationLatitude < -1 || destinationLatitude > 20 ||\n            sourceLongitude < -1 || sourceLongitude > 20 ||\n            destinationLongitude < -1 || destinationLongitude > 20\n        ) {\n            alert(\"Invalid latitude or longitude values. Please enter valid coordinates.\");\n            return;\n        }\n\n        // Fetch buses here\n        try {\n            const busData = await search_busses(sourceLatitude, sourceLongitude, destinationLatitude, destinationLongitude);\n            console.log(busData); // Check the structure of the bus data\n            setBuses(busData); // Set the fetched bus data to state\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n        }\n    };\n\n    return (\n\n      <div className=\"homepage-container\">\n        <div className=\"top-buttons\">\n          <button onClick={handleManageBookings} className=\"top-btn\">\n            Manage Bookings\n          </button>\n          <button onClick={handleLogout} className=\"top-btn\">\n            Logout\n          </button>\n        </div>\n    \n        <div className=\"search-container\">\n          <h1>Bus Search</h1>\n          <form onSubmit={handleSearch} className=\"horizontal-form\">\n            <div className=\"coordinate-input\">\n              <label>Source Latitude</label>\n              <input\n                type=\"number\"\n                value={sourceLatitude}\n                onChange={(e) => setSourceLatitude(e.target.value)}\n                placeholder=\"Source Latitude\"\n                required\n              />\n            </div>\n            <div className=\"coordinate-input\">\n              <label>Source Longitude</label>\n              <input\n                type=\"number\"\n                value={sourceLongitude}\n                onChange={(e) => setSourceLongitude(e.target.value)}\n                placeholder=\"Source Longitude\"\n                required\n              />\n            </div>\n            <div className=\"coordinate-input\">\n              <label>Destination Latitude</label>\n              <input\n                type=\"number\"\n                value={destinationLatitude}\n                onChange={(e) => setDestinationLatitude(e.target.value)}\n                placeholder=\"Destination Latitude\"\n                required\n              />\n            </div>\n            <div className=\"coordinate-input\">\n              <label>Destination Longitude</label>\n              <input\n                type=\"number\"\n                value={destinationLongitude}\n                onChange={(e) => setDestinationLongitude(e.target.value)}\n                placeholder=\"Destination Longitude\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"search-btn\">\n              Search Buses\n            </button>\n          </form>\n    \n          <div className=\"bus-list\">\n                {buses.map((bus) => (\n                    <div key={bus.busId} className={`bus-item ${bus.live ? 'live' : 'not-live'}`} style={{ backgroundColor: bus.live ? 'lightgreen' : 'lightcoral' }}>\n                        <h3>{bus.busName} (ID: {bus.busId})</h3>\n                        <p>Total Seats: {bus.totalSeats}</p>\n                        <p>Current Occupancy: {bus.currentOccupancy}</p>\n                        {/* <button onClick={() => viewSeatPlan(bus.busId)}>View Seat Plan</button> */}\n                        {/* <div className=\"seat-plan\">\n                            {bus.seatPlan.map(seat => (\n                                <div key={seat.seatNumber} style={{ backgroundColor: seat.isAvailable ? 'lightgreen' : 'lightcoral' }}>\n                                    {seat.seatNumber}: {seat.isAvailable ? 'Available' : 'Booked'}\n                                </div>\n                            ))}\n                        </div> */}\n                    </div>\n                ))}\n            </div>\n        </div>\n      </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAAC;AAClD,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}